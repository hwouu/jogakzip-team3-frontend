import React, { useState } from "react";
import "./GroupDetail.css"; // Í≥†Ïú†Ìïú Ïä§ÌÉÄÏùº Ï†ÅÏö©

const GroupDetail = () => {
  const [groupData, setGroupData] = useState({
    id: 1,
    name: "Îã¨Î¥âÏù¥ÎÑ§ Í∞ÄÏ°±",
    description:
      "ÏÑúÎ°ú Ìïú ÎßàÏùåÏúºÎ°ú ÏùëÏõêÌïòÍ≥† ÏïÑÎÅºÎäî Îã¨Î¥âÏù¥ÎÑ§ Í∞ÄÏ°±ÏûÖÎãàÎã§. ÏÑúÎ°ú Ìïú ÎßàÏùåÏúºÎ°ú ÏùëÏõêÌïòÍ≥† ÏïÑÎÅºÎäî Îã¨Î¥âÏù¥ÎÑ§ Í∞ÄÏ°±ÏûÖÎãàÎã§.",
    isPublic: true,
    postCount: 8,
    likeCount: 1500,
    createdAt: "D+265",
    badges: [
      { id: 1, name: "7Ïùº Ïó∞ÏÜç Ï∂îÏñµ Îì±Î°ù", icon: "üèÜ" },
      { id: 2, name: "Í∑∏Î£π Í≥µÍ∞ê 1ÎßåÍ∞ú Ïù¥ÏÉÅ Î∞õÍ∏∞", icon: "‚ù§Ô∏è" },
      { id: 3, name: "Í≤åÏãúÍ∏Ä Í≥µÍ∞ê 1ÎßåÍ∞ú Ïù¥ÏÉÅ Î∞õÍ∏∞", icon: "üí¨" },
    ],
  });

  const [isPublicSelected, setIsPublicSelected] = useState(true);
  const [searchTerm, setSearchTerm] = useState("");
  const [sortCriteria, setSortCriteria] = useState("likes");

  const handleLike = () => {
    alert("Í≥µÍ∞êÏùÑ Î≥¥ÎÉàÏäµÎãàÎã§!");
  };

  const handleTogglePublic = () => {
    setIsPublicSelected(true);
  };

  const handleTogglePrivate = () => {
    setIsPublicSelected(false);
  };

  return (
    <div className="group-detail-container">
      <div className="group-header">
        <img
          src="/path/to/image.jpg"
          alt={groupData.name}
          className="group-img"
        />
        <div className="group-info">
          <div className="group-meta-actions">
            <div className="group-meta">
              <span>{groupData.createdAt}</span>
              <span className="public-status">
                {groupData.isPublic ? "Í≥µÍ∞ú" : "ÎπÑÍ≥µÍ∞ú"}
              </span>
            </div>
            <div className="group-actions">
              <button className="edit-btn">Í∑∏Î£π Ï†ïÎ≥¥ ÏàòÏ†ïÌïòÍ∏∞</button>
              <button className="delete-btn">Í∑∏Î£π ÏÇ≠Ï†úÌïòÍ∏∞</button>
            </div>
          </div>

          <div className="group-name-stats">
            <h1 className="group-detail-title">{groupData.name}</h1>
            <div className="group-stats-inline">
              <span>Ï∂îÏñµ {groupData.postCount}</span>
              <span>Í∑∏Î£π Í≥µÍ∞ê {groupData.likeCount}K</span>
            </div>
          </div>
          <p className="group-description">{groupData.description}</p>

          <div className="group-badge-and-like">
            <div className="group-badges">
              <h3>ÌöçÎìù Î∞∞ÏßÄ</h3>
              <div className="badges-list">
                {groupData.badges.map((badge) => (
                  <div key={badge.id} className="badge">
                    <span className="badge-icon">{badge.icon}</span>
                    <span className="badge-name">{badge.name}</span>
                  </div>
                ))}
              </div>
            </div>
            <button className="like-btn" onClick={handleLike}>
              <img src="/like-icon.svg" alt="Í≥µÍ∞ê ÏïÑÏù¥ÏΩò" />{" "}
              {/* Í≥µÍ∞ê ÏïÑÏù¥ÏΩò Ï∂îÍ∞Ä */}
              Í≥µÍ∞ê Î≥¥ÎÇ¥Í∏∞
            </button>
          </div>
        </div>
      </div>

      {/* Ï∂îÏñµ Î™©Î°ù, Ïò¨Î¶¨Í∏∞ Î≤ÑÌäº, Í≥µÍ∞ú/ÎπÑÍ≥µÍ∞ú, Í≤ÄÏÉâ Î∞è Ï†ïÎ†¨ */}
      <div className="memory-section">
        <div className="memory-header">
          <h3>Ï∂îÏñµ Î™©Î°ù</h3>
          <button className="memory-upload-btn">Ï∂îÏñµ Ïò¨Î¶¨Í∏∞</button>
        </div>

        <div className="memory-controls">
          <div className="privacy-toggle">
            <button
              className={`public-btn ${isPublicSelected ? "active" : ""}`}
              onClick={handleTogglePublic}
            >
              Í≥µÍ∞ú
            </button>
            <button
              className={`private-btn ${!isPublicSelected ? "active" : ""}`}
              onClick={handleTogglePrivate}
            >
              ÎπÑÍ≥µÍ∞ú
            </button>
          </div>

          <div className="memory-search-container">
            <img
              src="/search.svg"
              alt="search-icon"
              className="memory-search-icon"
            />
            <input
              type="text"
              placeholder="ÌÉúÍ∑∏ ÌòπÏùÄ Ï†úÎ™©ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî"
              className="memory-search-input"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>

          <select
            className="memory-sort-select"
            value={sortCriteria}
            onChange={(e) => setSortCriteria(e.target.value)}
          >
            <option value="likes">Í≥µÍ∞êÏàú</option>
            <option value="recent">ÏµúÏã†Ïàú</option>
          </select>
        </div>
      </div>
    </div>
  );
};

export default GroupDetail;
